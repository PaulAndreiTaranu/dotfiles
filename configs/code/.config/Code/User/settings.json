{
    // FONTS
    "editor.fontFamily": "JetBrainsMono Nerd Font Mono",
    "editor.fontSize": 13,
    "editor.fontLigatures": true,
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
    "terminal.integrated.fontSize": 13,
    "editor.fontWeight": "500",
    "errorLens.fontWeight": "bold",

    // EDITOR
    "editor.accessibilitySupport": "off",
    "editor.codeLens": false,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.smoothScrolling": true,
    "editor.detectIndentation": false,
    "editor.insertSpaces": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.formatOnSave": true,
    "editor.minimap.enabled": false,

    // SUGGESTIONS
    "editor.quickSuggestions": {
        "comments": "on",
        "strings": "on",
        "other": "on"
    }, // Disables all suggestions
    "editor.quickSuggestionsDelay": 0,
    "editor.inlineSuggest.enabled": true,
    "editor.suggestSelection": "first",
    "editor.suggest.showWords": false,
    "editor.suggest.snippetsPreventQuickSuggestions": true,
    "editor.suggest.insertMode": "insert",
    "editor.acceptSuggestionOnCommitCharacter": true,
    "editor.acceptSuggestionOnEnter": "off",
    "editor.tabCompletion": "on",
    "editor.wordBasedSuggestions": "off",
    "editor.wordBasedSuggestionsMode": "currentDocument",
    "editor.snippetSuggestions": "top",
    "editor.linkedEditing": true,

    // EDITOR && PRETTIER
    "editor.wordWrap": "off",
    "editor.wordWrapColumn": 100,
    "prettier.printWidth": 100,
    "editor.tabSize": 4,
    "prettier.tabWidth": 4,

    // PRETTIER
    "prettier.arrowParens": "always",
    "prettier.bracketSpacing": true,
    "prettier.endOfLine": "lf",
    "prettier.bracketSameLine": true,
    "prettier.jsxSingleQuote": true,
    "prettier.proseWrap": "preserve",
    "prettier.quoteProps": "as-needed",
    "prettier.semi": false,
    "prettier.singleQuote": true,
    "prettier.trailingComma": "all",
    "prettier.useTabs": false,
    "prettier.singleAttributePerLine": false,
    // ESLINT
    "eslint.format.enable": true,
    "eslint.run": "onSave",

    // ERROR LENS
    "errorLens.delay": 0,

    // TERMINAL
    "terminal.explorerKind": "external",
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.cursorBlinking": true,

    // VIM
    "vim.gdefault": true,
    "vim.leader": "<space>",
    "vim.sneak": true,
    "vim.useCtrlKeys": false,
    "vim.useSystemClipboard": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<leader>", "s"],
            "commands": [":w"]
        },
        {
            "before": ["<leader>", "w"],
            "commands": [":q"]
        },
        {
            "before": ["<leader>", "h"],
            "commands": [":bprevious"]
        },
        {
            "before": ["<leader>", "l"],
            "commands": [":bnext"]
        }
    ],
    // To improve performance
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },
    "zenMode.centerLayout": false,
    "zenMode.restore": true,
    "zenMode.hideLineNumbers": false,
    "zenMode.fullScreen": true,

    // SECURITY
    "security.workspace.trust.banner": "never",
    "security.workspace.trust.emptyWindow": false,
    "security.workspace.trust.enabled": false,

    // MISC
    "keyboard.dispatch": "keyCode", // Solve linux caps to esc bug
    "telemetry.telemetryLevel": "off",
    "git.decorations.enabled": false,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 180000,
    "scm.diffDecorationsGutterVisibility": "hover",
    "extensions.closeExtensionDetailsOnViewChange": true,
    "extensions.ignoreRecommendations": true,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
    "emmet.showSuggestionsAsSnippets": true,
    "emmet.triggerExpansionOnTab": true,

    // PROGRAMMING LANGUAGES
    "editor.defaultFormatter": null,

    // TS/JS
    "[javascript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    "[typescript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    "javascript.updateImportsOnFileMove.enabled": "always",
    "debug.javascript.autoAttachFilter": "disabled",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "npm.fetchOnlinePackageInfo": false,

    // HTML
    "[html]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    "[xml]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },

    // JSON
    "[json]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    "json.format.enable": true,
    "json.sortOnSave.enable": false,

    // PYTHON
    "[python]": { "editor.defaultFormatter": "ms-python.black-formatter" },
    "python.defaultInterpreterPath": "/usr/bin/python3",

    // Notebook
    "notebook.formatOnCellExecution": true,
    "notebook.formatOnSave.enabled": true,
    "notebook.insertToolbarLocation": "notebookToolbar",
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "right"
    },

    // JAVA
    "[java]": { "editor.defaultFormatter": null },

    // GOLANG
    "[go]": {
        "editor.defaultFormatter": "golang.go-nightly"
    },
    "go.toolsManagement.autoUpdate": true,
    "gopls": {
        "formatting.gofumpt": true
    },

    // Rust
    "[rust]": { "editor.defaultFormatter": "rust-lang.rust" },

    // C++
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools",
        "editor.wordWrap": "off"
    },
    "C_Cpp.vcFormat.indent.caseLabels": true,
    "C_Cpp.vcFormat.indent.caseContentsWhenBlock": true,
    "C_Cpp.vcFormat.indent.accessSpecifiers": true,
    "C_Cpp.vcFormat.indent.braces": true,
    "C_Cpp.clang_format_fallbackStyle": "{BasedOnStyle: LLVM, IndentWidth: 4}",
    "C_Cpp.clang_format_style": "{BasedOnStyle: LLVM, IndentWidth: 4}",
    "C_Cpp.errorSquiggles": "enabled",
    "C_Cpp.default.browse.limitSymbolsToIncludedHeaders": true,
    "C_Cpp.intelliSenseEngine": "Tag Parser",
    "C_Cpp.intelliSenseCacheSize": 0,
    "C_Cpp.intelliSenseUpdateDelay": 500,

    // C#
    "[csharp]": { "editor.defaultFormatter": "ms-dotnettools.csharp" },
    "omnisharp.enableEditorConfigSupport": false,

    // BASH
    "[shellscript]": { "editor.defaultFormatter": "foxundermoon.shell-format" },

    // Terraform
    "[terraform]": { "editor.defaultFormatter": "hashicorp.terraform" },

    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true
    },
    "search.exclude": {
        "node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true,
        "**/.hg/store/**": true
    },

    // WINDOW
    "window.zoomLevel": 1,
    "window.restoreFullscreen": true,
    "window.titleBarStyle": "custom",
    "window.commandCenter": false,
    "window.customTitleBarVisibility": "windowed",
    "window.menuBarVisibility": "classic",

    // WORKBENCH
    "workbench.list.horizontalScrolling": true,
    "workbench.startupEditor": "none",
    "workbench.list.smoothScrolling": true,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.sideBar.location": "right",
    "workbench.activityBar.location": "top",
    "workbench.productIconTheme": "fluent-icons",
    "workbench.iconTheme": "vscode-great-icons",
    "workbench.colorCustomizations": {
        // "editor.background": "#000000"
        // "editoreNumber.activeForeground": "#ffffff"
        // "editorLineNumber.foreground": "#808080",
    },
    "remote.SSH.remotePlatform": {
        "fedoraServer": "linux",
        "ubuntuServer": "linux"
    },

    // GAME ENGINES WINDOWS
    "godot_tools.editor_path": "C:\\Users\\paula\\Documents\\Godot\\Godot_v4.0_mono.exe",
    "godot_tools.gdscript_lsp_server_port": 6005,
    "workbench.colorTheme": "GitHub Dark Default",
    "markdown-preview-enhanced.previewTheme": "github-dark.css",
    "markdown-preview-enhanced.codeBlockTheme": "darcula.css",
    "jupyter.askForKernelRestart": false
}
